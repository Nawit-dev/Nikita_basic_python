# ++++++++++++++++++++++++++++++++++++++++++++++++
# Списки
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Создание списков
# ================================================

cities = ["Москва", "Тверь", "Вологда"]
print(cities)
numbers = [1,2,3,4,5]
print(numbers)
mixed = ["Москва", 122334,True, 23.4]
print(mixed)
# ================================================
# 2. Доступ к элементам списка
# ================================================
print(cities[0])
print(numbers[-1])
#print(cities[10])#получим ошибку "list index out of range", т.к. нет 10 индекса в cities
# ================================================
# 3. Изменение элементов списка
# ================================================
numbers[1] = 10
print(numbers)
mixed[-1] = 'Python'
print(mixed)
# ================================================
# 4. Функции для работы со списками
# ================================================

print(len(numbers))
print(max(numbers))
print(min(numbers))
print(sum(numbers))
numbers.sort(reverse=True)
print(numbers)

# ================================================
# 5. Операции со списками
# ================================================

list1 =[1, 2, 3]
list2 = [4, 5]
print(list1 + list2)
list3 = ["Python", "is", "awesome"]
print(list3*3)

# ================================================
# 6. Проверка вхождения
# ================================================

print(3 in numbers)
print('Москва' in cities)
print([1,2] in mixed)
# ================================================
# 7. Удаление элементов
# ================================================
print(numbers)
del numbers[2]
print(numbers)
del numbers[-1]
print(numbers)
# ================================================
# 8. Дополнительное задание
# ================================================
str = "Python"
mylist = list(str)
print(mylist)
print(max(mylist))
print(min(mylist))
#print(sum(mylist))#Выдаст ошибку "nsupported operand type(s) for +: 'int' and 'str'",т.к. sum начинает с нуля, а число + строка невозможно.

# ++++++++++++++++++++++++++++++++++++++++++++++++
# Срезы списков
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Создание и копирование списков
# ================================================

cities = ["Москва", "Санкт-Петербург", "Казань", "Новосибирск", "Екатеринбург"]
cities2 = cities[:]
print(id(cities))#1167540023232
print(id(cities2))#1167537906432
# ================================================
# 2. Извлечение элементов с помощью срезов
# ================================================

print(cities[1:3])
print(cities[2:])
print(cities[:3])
print(cities[:])
print(cities[-2:])

# ================================================
# 3. Использование шагов в срезах
# ================================================
print(cities[1::2])
print(cities[::-1])
print(cities[-2::-2])

# ================================================
# 4. Изменение элементов списка через срезы
# ================================================
cities[1:3]="Сочи","Нижний Новгород"
print(cities)
cities[1::2] = ['Город'] * len(cities[1::2])
#cities[1::2] = ['Город','Город'] Либо вот так
print(cities)
cities[1:3] = "Волгоград", "Омск"
print(cities)
# ================================================
# 5. Операции с объединением списков
# ================================================

mylist1 =[1, 2, 3]
mylist2 = [4, 5, 6]
print(mylist1 + mylist2)
print(["Python", "rocks"] * 2)
# ================================================
# 6. Сравнение списков
# ================================================

res = [1, 2, 3] == [1, 2, 3]
print(res)
res2 = [10, 5, 3] > [5, 10, 3]
print(res2)

#res3 = [1, 2, 3] > [1, 2, "abc"]
#print(res3)Будет ошибка, т.к. питон не умеет сравнивать разные несопостовивые типы

# ================================================
# 7. Дополнительное задание
# ================================================

chars = list("Python")
print(max(chars))
print(min(chars))
#print(sum(chars))Выдаст ошибку "nsupported operand type(s) for +: 'int' and 'str'",т.к. sum начинает с нуля, а число + строка невозможно.

# ++++++++++++++++++++++++++++++++++++++++++++++++
# Методы списков
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Добавление элементов
# ================================================
numbers = [5, 10, 15]
numbers.append(20)
print(numbers)
numbers.insert(1, 7)
print(numbers)
numbers.append('Python')
print(numbers)

# ================================================
# 2. Удаление элементов
# ================================================

numbers.remove(10)
print(numbers)
print(numbers.pop(-1))
numbers.clear()
print(numbers)

# ================================================
# 3. Копирование списков
# ================================================

letters = ["a", "b", "c"]
mylist = letters.copy()
mylist2 = list(letters)
print(id(letters))#2383702622784
print(id(mylist))#2383703198464
print(id(mylist2))#2383704373504
# ================================================
# 4. Поиск элементов
# ================================================
marks = [2, 3, 5, 3, 4, 5, 2, 3]
print(marks.count(3))
print(6 in marks)
print(marks.index(5))
# ================================================
# 5. Изменение порядка элементов
# ================================================

nums = [8, 2, 5, 1, 7]
print(sorted(nums))
nums.sort(reverse=True)
print(nums)
nums.reverse()
print(nums)

# ================================================
# 6. Сортировка строк
# ================================================
cities = ["Москва", "Сочи", "Нижний Новгород", "Новосибирск", "Екатеринбург"]
cities.sort()
print(cities)#id 2019676347328
new_list = sorted(cities.copy())
print(new_list)#id 2019676347456

# ================================================
# 7. Дополнительное задание
# ================================================
chars = list("programming")
print(chars.count("g"))
chars.reverse()
print(chars)
chars.sort()
print(chars)#Расположатся по алфавиту


# ++++++++++++++++++++++++++++++++++++++++++++++++
# Вложенные списки (массивы)
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Создание вложенного списка
# ================================================
matrix = [[1,2,3,5],
          [6,7,8,9],
          [10,11,12]]
print(matrix)
print(matrix[1])
res = matrix[2]
print(res[0])

# ================================================
# 2. Изменение элементов вложенного списка
# ================================================
matrix[0] = [0,0,0,0]
print(matrix)
matrix[1][-1] = "python"
print(matrix)


